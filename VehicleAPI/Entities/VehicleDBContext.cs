// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace VehicleAPI.Entities;

public partial class VehicleDBContext : DbContext
{
    public VehicleDBContext(DbContextOptions<VehicleDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Driver> Driver { get; set; }

    public virtual DbSet<InsurancePolicy> InsurancePolicy { get; set; }

    public virtual DbSet<MotorVehicle> MotorVehicle { get; set; }

    public virtual DbSet<MotorVehicleDriver> MotorVehicleDriver { get; set; }

    public virtual DbSet<MotorVehicleType> MotorVehicleType { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Driver>(entity =>
        {
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<InsurancePolicy>(entity =>
        {
            entity.Property(e => e.PolicyProvider)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<MotorVehicle>(entity =>
        {
            entity.HasIndex(e => e.InsurancePolicyId, "IX_MotorVehicle").IsUnique();

            entity.Property(e => e.Brand)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Model)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.InsurancePolicy).WithOne(p => p.MotorVehicle)
                .HasForeignKey<MotorVehicle>(d => d.InsurancePolicyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MotorVehicle_InsurancePolicy");

            entity.HasOne(d => d.MotorVehicleType).WithMany(p => p.MotorVehicle)
                .HasForeignKey(d => d.MotorVehicleTypeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MotorVehicle_MotorVehicleType");
        });

        modelBuilder.Entity<MotorVehicleDriver>(entity =>
        {
            entity.HasIndex(e => new { e.DriverId, e.MotorVehicleId }, "IX_MotorVehicleDriver").IsUnique();

            entity.HasOne(d => d.Driver).WithMany(p => p.MotorVehicleDriver)
                .HasForeignKey(d => d.DriverId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_MotorVehicleDriver_Driver");

            entity.HasOne(d => d.MotorVehicle).WithMany(p => p.MotorVehicleDriver)
                .HasForeignKey(d => d.MotorVehicleId)
                .HasConstraintName("FK_MotorVehicleDriver_MotorVehicle");
        });

        modelBuilder.Entity<MotorVehicleType>(entity =>
        {
            entity.Property(e => e.Type)
                .IsRequired()
                .HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}